[{"dur": "7", "text": "Translator: Andrea McDonough\nReviewer: Jessica Ruby", "start": "0"}, {"dur": "1.348", "text": "What's an algorithm?", "start": "15.483"}, {"dur": "0.831", "text": "In computer science,", "start": "16.831"}, {"dur": "1.754", "text": "an algorithm is a set of instructions", "start": "17.662"}, {"dur": "2.689", "text": "for solving some problem, step-by-step.", "start": "19.416"}, {"dur": "2.272", "text": "Typically, algorithms are executed by computers,", "start": "22.105"}, {"dur": "2.167", "text": "but we humans have algorithms as well.", "start": "24.377"}, {"dur": "1.853", "text": "For instance, how would you go about counting", "start": "26.544"}, {"dur": "1.82", "text": "the number of people in a room?", "start": "28.397"}, {"dur": "1.215", "text": "Well, if you're like me,", "start": "30.217"}, {"dur": "1.496", "text": "you probably point at each person,", "start": "31.432"}, {"dur": "0.96", "text": "one at a time,", "start": "32.928"}, {"dur": "1.837", "text": "and count up from 0:", "start": "33.888"}, {"dur": "2.873", "text": "1, 2, 3, 4 and so forth.", "start": "35.725"}, {"dur": "1.113", "text": "Well, that's an algorithm.", "start": "38.598"}, {"dur": "1.134", "text": "In fact, let's try to express it", "start": "39.711"}, {"dur": "2.229", "text": "a bit more formally in pseudocode,", "start": "40.845"}, {"dur": "0.831", "text": "English-like syntax", "start": "43.074"}, {"dur": "2.124", "text": "that resembles a programming language.", "start": "43.905"}, {"dur": "1.767", "text": "Let n equal 0.", "start": "46.029"}, {"dur": "4.792", "text": "For each person in room, set n = n + 1.", "start": "47.796"}, {"dur": "1.497", "text": "How to interpret this pseudocode?", "start": "52.588"}, {"dur": "1.836", "text": "Well, line 1 declares, so to speak,", "start": "54.085"}, {"dur": "1.416", "text": "a variable called n", "start": "55.921"}, {"dur": "2.379", "text": "and initializes its value to zero.", "start": "57.337"}, {"dur": "2.335", "text": "This just means that at the beginning of our algorithm,", "start": "59.716"}, {"dur": "1.584", "text": "the thing with which we're counting", "start": "62.051"}, {"dur": "1.668", "text": "has a value of zero.", "start": "63.635"}, {"dur": "1.336", "text": "After all, before we start counting,", "start": "65.303"}, {"dur": "1.669", "text": "we haven't counted anything yet.", "start": "66.639"}, {"dur": "2.248", "text": "Calling this variable n is just a convention.", "start": "68.308"}, {"dur": "2.005", "text": "I could have called it almost anything.", "start": "70.556"}, {"dur": "2.086", "text": "Now, line 2 demarks the start of loop,", "start": "72.561"}, {"dur": "3.044", "text": "a sequence of steps that will repeat some number of times.", "start": "74.647"}, {"dur": "1.794", "text": "So, in our example, the step we're taking", "start": "77.691"}, {"dur": "1.734", "text": "is counting people in the room.", "start": "79.485"}, {"dur": "1.763", "text": "Beneath line 2 is line 3,", "start": "81.219"}, {"dur": "2.511", "text": "which describes exactly how we'll go about counting.", "start": "82.982"}, {"dur": "2.25", "text": "The indentation implies that it's line 3", "start": "85.493"}, {"dur": "1.222", "text": "that will repeat.", "start": "87.743"}, {"dur": "1.219", "text": "So, what the pseudocode is saying", "start": "88.965"}, {"dur": "2.066", "text": "is that after starting at zero,", "start": "90.184"}, {"dur": "1.71", "text": "for each person in the room,", "start": "92.25"}, {"dur": "2.218", "text": "we'll increase n by 1.", "start": "93.96"}, {"dur": "2.329", "text": "Now, is this algorithm correct?", "start": "96.178"}, {"dur": "1.608", "text": "Well, let's bang on it a bit.", "start": "98.507"}, {"dur": "2.826", "text": "Does it work if there are 2 people in the room?", "start": "100.115"}, {"dur": "0.78", "text": "Let's see.", "start": "102.941"}, {"dur": "2.085", "text": "In line 1, we initialize n to zero.", "start": "103.721"}, {"dur": "1.302", "text": "For each of these two people,", "start": "105.806"}, {"dur": "2.168", "text": "we then increment n by 1.", "start": "107.108"}, {"dur": "1.582", "text": "So, in the first trip through the loop,", "start": "109.276"}, {"dur": "2.005", "text": "we update n from zero to 1,", "start": "110.858"}, {"dur": "1.655", "text": "on the second trip through that same loop,", "start": "112.863"}, {"dur": "2.249", "text": "we update n from 1 to 2.", "start": "114.518"}, {"dur": "3.341", "text": "And so, by this algorithm's end, n is 2,", "start": "116.767"}, {"dur": "2.113", "text": "which indeed matches the number of people in the room.", "start": "120.108"}, {"dur": "1.223", "text": "So far, so good.", "start": "122.221"}, {"dur": "1.752", "text": "How about a corner case, though?", "start": "123.444"}, {"dur": "1.964", "text": "Suppose that there are zero people in the room,", "start": "125.196"}, {"dur": "2.347", "text": "besides me, who's doing the counting.", "start": "127.16"}, {"dur": "3.01", "text": "In line 1, we again initialize n to zero.", "start": "129.507"}, {"dur": "2.522", "text": "This time, though, line 3 doesn't execute at all", "start": "132.517"}, {"dur": "1.88", "text": "since there isn't a person in the room,", "start": "135.039"}, {"dur": "1.624", "text": "and so, n remains zero,", "start": "136.919"}, {"dur": "2.359", "text": "which indeed matches the number of people in the room.", "start": "138.543"}, {"dur": "0.906", "text": "Pretty simple, right?", "start": "140.902"}, {"dur": "3.216", "text": "But counting people one a time is pretty inefficient, too, no?", "start": "141.808"}, {"dur": "1.568", "text": "Surely, we can do better!", "start": "145.024"}, {"dur": "1.866", "text": "Why not count two people at a time?", "start": "146.592"}, {"dur": "5.099", "text": "Instead of counting 1, 2, 3, 4, 5, 6, 7, 8, and so forth,", "start": "148.458"}, {"dur": "0.918", "text": "why not count", "start": "153.557"}, {"dur": "2.127", "text": "2, 4, 6, 8, and so on?", "start": "154.475"}, {"dur": "2.418", "text": "It even sounds faster, and it surely is.", "start": "156.602"}, {"dur": "2.835", "text": "Let's express this optimization in pseudocode.", "start": "159.02"}, {"dur": "1.462", "text": "Let n equal zero.", "start": "161.855"}, {"dur": "1.997", "text": "For each pair of people in room,", "start": "163.317"}, {"dur": "2.588", "text": "set n = n + 2.", "start": "165.314"}, {"dur": "1.673", "text": "Pretty simple change, right?", "start": "167.902"}, {"dur": "1.791", "text": "Rather than count people one at a time,", "start": "169.575"}, {"dur": "2.343", "text": "we instead count them two at a time.", "start": "171.366"}, {"dur": "2.815", "text": "This algorithm's thus twice as fast as the last.", "start": "173.709"}, {"dur": "1.346", "text": "But is it correct?", "start": "176.524"}, {"dur": "0.794", "text": "Let's see.", "start": "177.87"}, {"dur": "2.125", "text": "Does it work if there are 2 people in the room?", "start": "178.664"}, {"dur": "2.342", "text": "In line 1, we initialize n to zero.", "start": "180.789"}, {"dur": "3.268", "text": "For that one pair of people, we then increment n by 2.", "start": "183.131"}, {"dur": "2.522", "text": "And so, by this algorithm's end, n is 2,", "start": "186.399"}, {"dur": "2.382", "text": "which indeed matches the number of people in the room.", "start": "188.921"}, {"dur": "2.412", "text": "Suppose next that there are zero people in the room.", "start": "191.303"}, {"dur": "2.587", "text": "In line 1, we initialize n to zero.", "start": "193.715"}, {"dur": "2.08", "text": "As before, line 3 doesn't execute at all", "start": "196.302"}, {"dur": "2.342", "text": "since there aren't any pairs of people in the room,", "start": "198.382"}, {"dur": "1.686", "text": "and so, n remains zero,", "start": "200.724"}, {"dur": "2.773", "text": "which indeed matches the number of people in the room.", "start": "202.41"}, {"dur": "2.372", "text": "But what if there are 3 people in the room?", "start": "205.183"}, {"dur": "1.937", "text": "How does this algorithm fair?", "start": "207.555"}, {"dur": "0.829", "text": "Let's see.", "start": "209.492"}, {"dur": "2.67", "text": "In line 1, we initialize n to zero.", "start": "210.321"}, {"dur": "1.29", "text": "For a pair of those people,", "start": "212.991"}, {"dur": "1.916", "text": "we then increment n by 2,", "start": "214.281"}, {"dur": "0.992", "text": "but then what?", "start": "216.197"}, {"dur": "2.262", "text": "There isn't another full pair of people in the room,", "start": "217.189"}, {"dur": "2.21", "text": "so line 2 no longer applies.", "start": "219.451"}, {"dur": "1.669", "text": "And so, by this algorithm's end,", "start": "221.661"}, {"dur": "2.596", "text": "n is still 2, which isn't correct.", "start": "223.33"}, {"dur": "2.332", "text": "Indeed this algorithm is said to be buggy", "start": "225.926"}, {"dur": "1.148", "text": "because it has a mistake.", "start": "228.258"}, {"dur": "1.896", "text": "Let's redress with some new pseudocode.", "start": "229.406"}, {"dur": "1.793", "text": "Let n equal zero.", "start": "231.302"}, {"dur": "2.123", "text": "For each pair of people in room,", "start": "233.095"}, {"dur": "2.422", "text": "set n = n + 2.", "start": "235.218"}, {"dur": "2.459", "text": "If 1 person remains unpaired,", "start": "237.64"}, {"dur": "2.376", "text": "set n = n + 1.", "start": "240.099"}, {"dur": "1.507", "text": "To solve this particular problem,", "start": "242.475"}, {"dur": "2.249", "text": "we've introduced in line 4 a condition,", "start": "243.982"}, {"dur": "1.835", "text": "otherwise known as a branch,", "start": "246.231"}, {"dur": "2.253", "text": "that only executes if there is one person", "start": "248.066"}, {"dur": "1.876", "text": "we could not pair with another.", "start": "250.319"}, {"dur": "2.065", "text": "So now, whether there's 1 or 3", "start": "252.195"}, {"dur": "2.273", "text": "or any odd number of people in the room,", "start": "254.26"}, {"dur": "2.288", "text": "this algorithm will now count them.", "start": "256.533"}, {"dur": "1.345", "text": "Can we do even better?", "start": "258.821"}, {"dur": "3.294", "text": "Well, we could count in 3's or 4's or even 5's and 10's,", "start": "260.166"}, {"dur": "1.3", "text": "but beyond that it's going to get", "start": "263.46"}, {"dur": "1.87", "text": "a little bit difficult to point.", "start": "264.76"}, {"dur": "0.937", "text": "At the end of the day,", "start": "266.63"}, {"dur": "2.264", "text": "whether executed by computers or humans,", "start": "267.567"}, {"dur": "1.96", "text": "algorithms are just a set of instructions", "start": "269.831"}, {"dur": "1.838", "text": "with which to solve problems.", "start": "271.791"}, {"dur": "1.743", "text": "These were just three.", "start": "273.629"}, {"dur": "2.982", "text": "What problem would you solve with an algorithm?", "start": "275.372"}]